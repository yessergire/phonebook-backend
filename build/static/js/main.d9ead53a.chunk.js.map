{"version":3,"sources":["components/Notification.js","components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/App.js","index.js"],"names":["Notification","message","noteStyle","display","length","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Filter","filter","handleFilterChange","value","onChange","Persons","persons","handleDeletePerson","personsToShow","p","name","toLowerCase","includes","map","person","key","number","onClick","e","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personsService","init","updateMessage","msg","setTimeout","target","preventDefault","every","newPerson","alert","window","confirm","updatePerson","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9ead53a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message }) => {\n    const display = (message.length === 0)\n                    ? 'none'\n                    : 'block';\n\n    const noteStyle = {\n        display: display,\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    return (\n        <div style={noteStyle}>{message}</div>\n    )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => (\n  <>\n    filter shown with <input value={filter} onChange={handleFilterChange} />\n  </>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst Persons = ({persons, filter, handleDeletePerson}) => {\n\n  const personsToShow = (filter === '')\n      ? persons\n      : persons.filter(p => p.name.toLowerCase().includes(filter))\n\n  const rows = () => personsToShow.map(person =>\n    <div key={person.name}>\n      {person.name} {person.number}\n      <button onClick={(e) => handleDeletePerson(e, person)}>delete</button>\n    </div>\n  )\n\n  return (\n    <>{rows()}</>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => (\n  <form onSubmit={addPerson}>\n    <div>name: <input onChange={handleNameChange} value={newName} /></div>\n    <div>number: <input onChange={handleNumberChange} value={newNumber} /></div>\n    <button type=\"submit\">add</button>\n  </form>\n)\n\nexport default PersonForm\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Notification from './Notification.js'\nimport Filter from './Filter.js'\nimport Persons from './Persons.js'\nimport PersonForm from './PersonForm.js'\n\nimport personsService from '../services/persons.js'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(init => setPersons(init))\n  }, [])\n\n  const updateMessage = (msg) => {\n    setMessage(msg)\n    setTimeout(()  => setMessage(''), 5000)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addPerson = person => {\n    personsService\n      .create(person)\n      .then(newPerson => setPersons([...persons, newPerson]))\n  }\n\n  const handleAddPerson = e => {\n    e.preventDefault()\n    if (newName.length === 0) return\n\n    const nameNotInList = persons.map(p => p.name)\n                         .every(name => name !== newName)\n\n    if (nameNotInList) {\n      addPerson({ name: newName, number: newNumber })\n      updateMessage(`Added ${newName}`)\n    } else {\n      const person = persons.filter(p => p.name === newName)[0]\n      const newPerson = {...person, number: newNumber}\n      if (newNumber === person.number) {\n        alert(`${newName} is already in added to phone book`)\n      } else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personsService\n          .update(newPerson.id, newPerson)\n          .then(updatePerson => {\n            setPersons(persons.map(p => p.id === person.id ? updatePerson: p))\n            updateMessage(`Information of ${newName} updated!`)\n          })\n          .catch(e => {\n            updateMessage(`Information of ${newName} has already been removed from server`)\n          })\n      }\n    }\n  }\n\n  const handleDeletePerson = (e, person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          updateMessage(`Deleted ${person.name}`)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={message} />\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleFilterChange={(e) => setFilter(e.target.value)} />\n\n      <h2>add a new</h2>\n      <PersonForm addPerson={handleAddPerson}\n                  handleNameChange={(e) => setNewName(e.target.value)} newName={newName}\n                  handleNumberChange={(e) => setNewNumber(e.target.value)} newNumber={newNumber} />\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} handleDeletePerson={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}